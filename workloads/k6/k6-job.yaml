apiVersion: batch/v1
kind: Job
metadata:
  name: k6-load-test
spec:
  template:
    spec:
      containers:
      - name: k6
        image: grafana/k6:latest
        command: ["k6", "run", "/scripts/nginx-test.js"]
        volumeMounts:
        - name: k6-scripts
          mountPath: /scripts
      restartPolicy: Never
      volumes:
      - name: k6-scripts
        configMap:
          name: k6-scripts
  backoffLimit: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-scripts
data:
  nginx-test.js: |
    import http from 'k6/http';
    import { check } from 'k6';
    
    export let options = {
      stages: [
        { duration: '30s', target: 10 },
        { duration: '1m', target: 20 },
        { duration: '30s', target: 0 },
      ],
    };
    
    export default function() {
      let response = http.get('http://nginx.nginx.svc/health');
      check(response, {
        'status is 200': (r) => r.status === 200,
      });
    }
  
  wordpress-test.js: |
    import http from 'k6/http';
    import { check } from 'k6';
    
    export let options = {
      vus: 5,
      duration: '2m',
    };
    
    export default function() {
      let response = http.get('http://wordpress.backends.svc');
      check(response, {
        'status is 200': (r) => r.status === 200,
      });
    }

  podinfo-test.js: |
    import http from 'k6/http';
    import { check } from 'k6';
    
    export let options = {
      vus: 5,
      duration: '2m',
    };
    
    export default function() {
      let response = http.get('http://podinfo.backends.svc');
      check(response, {
        'status is 200': (r) => r.status === 200,
      });
    }
